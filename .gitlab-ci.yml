stages:
    - test
    - build
    - deploy
    - upload
    - release

variables: 
    MAVEN_OPTS: "-Dmaven.repo.local=.m2/repository"
    SONAR_HOST_URL: "http://localsonarqube:9000/"
    SONAR_TOKEN: "squ_35c667f3567119d5702ffa5fb92ca6eaac5889a6"
    SONAR_USER: "gitlab-runner"
    SONAR_PASSWORD: "Password@123"
    DEPLOY_STAGING_SSH_HOST: "ec2-user@172.16.1.121"
    PACKAGE_REGISTRY_URL: "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/govshell/${CI_COMMIT_TAG}"
default:
    cache:
        paths:
            - .m2/repository/
            - target/
    image: maven:3-openjdk-11

test:
    stage: test
    script:
      - mvn verify sonar:sonar -U
    rules:
      - if: $CI_COMMIT_BRANCH == "staging"
        allow_failure: true
      - if: $CI_COMMIT_BRANCH != "staging"
        allow_failure: false
    artifacts:
        untracked: false
        name: test_and_coverage_report
        reports:
          junit: [ reverse-proxy/target/surefire-reports/*.xml ]
        expire_in: "1 week"

build_java:
    stage: build
    script:
      - mkdir ~/.ssh
      - chmod 700 ~/.ssh 
      - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
      - mvn -s /tmp/maven_settings/settings-repo_linkit.xml -U deploy -Pwar -DskipTests=true 
    artifacts:
        paths:
          - reverse-proxy/target/govshell-reverse-proxy.war
          - src/main/resources/*.sql
    rules:
      - if: '$CI_COMMIT_TAG || $CI_COMMIT_BRANCH == "main" || $CI_COMMIT_BRANCH == "staging"'

build_angular:
    stage: build
    image: node:14.18.2-alpine3.15
    script:
      - cd webapp
      - npm install
      - npm run production-govshell
      - tar czf govshell-app.tgz dist/*  
    artifacts:
        paths:
          - webapp/govshell-app.tgz
    rules:
      - if: '$CI_COMMIT_TAG || $CI_COMMIT_BRANCH == "main" || $CI_COMMIT_BRANCH == "staging"'

upload:
    stage: upload
    image: curlimages/curl:latest
    rules:
        - if: $CI_COMMIT_TAG
    script:
        - 'curl -k --header "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file reverse-proxy/target/govshell-reverse-proxy.war ${PACKAGE_REGISTRY_URL}/govshell-reverse-proxy-${CI_COMMIT_TAG}.war'
        - 'curl -k --header "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file webapp/govshell-app.tgz ${PACKAGE_REGISTRY_URL}/govshell-app-${CI_COMMIT_TAG}.tgz'

release:
    stage: release
    image: registry.gitlab.com/gitlab-org/release-cli:latest
    rules:
        - if: $CI_COMMIT_TAG
    script:
        - 'release-cli create --name "govshell-$CI_COMMIT_TAG" --tag-name $CI_COMMIT_TAG 
          --assets-link "[ 
            {\"name\":\"govshell-reverse-proxy-${CI_COMMIT_TAG}.war\", \"url\":\"${PACKAGE_REGISTRY_URL}/govshell-reverse-proxy-${CI_COMMIT_TAG}.war\"},
            {\"name\":\"govshell-app-${CI_COMMIT_TAG}.tgz\", \"url\":\"${PACKAGE_REGISTRY_URL}/govshell-app-${CI_COMMIT_TAG}.tgz\"}
          ]"'

deploy_staging:
  stage: deploy
  image: kroniak/ssh-client
  script:
    - cp -r /tmp/ssh/ ~/.ssh
    - scp -r webapp/govshell-app.tgz $DEPLOY_STAGING_SSH_HOST:/tmp/
    - scp -r reverse-proxy/target/govshell-reverse-proxy.war $DEPLOY_STAGING_SSH_HOST:/tmp/
    - ssh $DEPLOY_STAGING_SSH_HOST 'sudo tar xvf /tmp/govshell-app.tgz'
    - ssh $DEPLOY_STAGING_SSH_HOST 'sudo systemctl stop tomcat'
    - ssh $DEPLOY_STAGING_SSH_HOST 'sudo rm -rf /usr/share/nginx/html/govshell-app/* && sudo cp -r dist/govshell-app/* /usr/share/nginx/html/govshell-app/'
    - ssh $DEPLOY_STAGING_SSH_HOST 'sudo cp -r /tmp/govshell-reverse-proxy.war /opt/apache-tomcat-9.0.70/webapps/'  
    - ssh $DEPLOY_STAGING_SSH_HOST 'sudo systemctl start tomcat'
    - ssh $DEPLOY_STAGING_SSH_HOST 'sudo rm -rf /tmp/govshell-app.tgz dist /tmp/reverse-proxy.war'
  only:
    - staging
